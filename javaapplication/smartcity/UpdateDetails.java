/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication.smartcity;

import javax.swing.JFrame;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author vivek
 */
public class UpdateDetails extends javax.swing.JFrame {

    /**
     * Creates new form Layout
     */
    public UpdateDetails() {
        initComponents();
        setTitle("Admin Login");
        setSize(1000,600);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userDesignation = new javax.swing.JLabel();
        userType = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        deletetxt = new javax.swing.JLabel();
        deletetxt1 = new javax.swing.JLabel();
        deletetxt2 = new javax.swing.JLabel();
        deletetxt3 = new javax.swing.JLabel();
        deletetxt5 = new javax.swing.JLabel();
        deletetxt6 = new javax.swing.JLabel();
        deletetxt7 = new javax.swing.JLabel();
        deletetxt8 = new javax.swing.JLabel();
        deletetxt9 = new javax.swing.JLabel();
        deletetxt10 = new javax.swing.JLabel();
        deletetxt11 = new javax.swing.JLabel();
        inputArea = new javax.swing.JTextField();
        inputArea1 = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        img = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        userDesignation.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        userDesignation.setText("Infrastructure Name");

        userType.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        userType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
        userType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTypeActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 153, 255));
        deleteButton.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        deleteButton.setText("Get Details");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        deletetxt.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt.setText("jLabel4");

        deletetxt1.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt1.setText("jLabel4");

        deletetxt2.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt2.setText("jLabel4");

        deletetxt3.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt3.setText("jLabel4");

        deletetxt5.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt5.setText("jLabel4");

        deletetxt6.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt6.setText("jLabel4");

        deletetxt7.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt7.setText("jLabel4");

        deletetxt8.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt8.setText("jLabel4");

        deletetxt9.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt9.setText("jLabel4");

        deletetxt10.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt10.setText("jLabel4");

        deletetxt11.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        deletetxt11.setText("jLabel4");

        inputArea.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        inputArea.setText("A");
        inputArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAreaActionPerformed(evt);
            }
        });

        inputArea1.setFont(new java.awt.Font("Cochin", 1, 18)); // NOI18N
        inputArea1.setText("A");
        inputArea1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputArea1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deletetxt5)
                    .addComponent(deletetxt2)
                    .addComponent(deletetxt)
                    .addComponent(deletetxt6)
                    .addComponent(deletetxt8)
                    .addComponent(deletetxt10))
                .addGap(137, 137, 137)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deletetxt11)
                    .addComponent(deletetxt9)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(inputArea, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletetxt3))
                    .addComponent(deletetxt1)
                    .addComponent(deletetxt7)
                    .addComponent(inputArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletetxt)
                    .addComponent(deletetxt1))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletetxt2)
                    .addComponent(deletetxt3)
                    .addComponent(inputArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletetxt5)
                    .addComponent(inputArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletetxt6)
                    .addComponent(deletetxt7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletetxt8)
                    .addComponent(deletetxt9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletetxt10)
                    .addComponent(deletetxt11))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        deletetxt.setVisible(false);
        deletetxt1.setVisible(false);
        deletetxt2.setVisible(false);
        deletetxt3.setVisible(false);
        deletetxt5.setVisible(false);
        deletetxt6.setVisible(false);
        deletetxt7.setVisible(false);
        deletetxt8.setVisible(false);
        deletetxt9.setVisible(false);
        deletetxt10.setVisible(false);
        deletetxt11.setVisible(false);
        inputArea.setVisible(false);
        inputArea1.setVisible(false);

        backButton.setBackground(new java.awt.Color(153, 153, 153));
        backButton.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/go back.png")); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(394, 394, 394)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(68, 68, 68))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(userDesignation)
                        .addGap(20, 20, 20)
                        .addComponent(userType, 0, 208, Short.MAX_VALUE)
                        .addGap(344, 344, 344))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        //fillComboBox();

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        img.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-add-properties-100.png")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Bell MT", 1, 48)); // NOI18N
        jLabel5.setText("Update Details");

        user.setText("user");

        Name.setText("Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(user, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(118, 118, 118)
                .addComponent(img)
                .addGap(89, 89, 89))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(img)
                .addGap(14, 14, 14))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(Name)
                        .addGap(18, 18, 18)
                        .addComponent(user)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        user.setVisible(false);
        Name.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void fillComboBox(String MDistrict)
    {
            Connection con=null;
            PreparedStatement pst2=null;
            ResultSet rs2=null;
            String user1=user.getText();
            try
            {
                String url="jdbc:mysql://localhost:3306/SmartCity";
                String usern="root";
                String pwd="";
                con=DriverManager.getConnection(url,usern,pwd);
                if(con!=null)
                {
                    String query2="select * from details where district=?";
                    pst2=con.prepareStatement(query2);
                    pst2.setString(1, MDistrict);
                    rs2=pst2.executeQuery();
                    while(rs2.next())
                    {
                        String name=rs2.getString("name");
                        String type=rs2.getString("infra_type");
                        if(!type.equalsIgnoreCase("school"))
                        {
                            userType.addItem(name);
                        }
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
    }
    
    public void fillComboBox2()
    {
            Connection con=null;
            PreparedStatement pst2=null;
            ResultSet rs2=null;
            String user1=user.getText();
            try
            {
                String url="jdbc:mysql://localhost:3306/SmartCity";
                String usern="root";
                String pwd="";
                con=DriverManager.getConnection(url,usern,pwd);
                if(con!=null)
                {
                    String query2="select * from details";
                    pst2=con.prepareStatement(query2);
                    rs2=pst2.executeQuery();
                    while(rs2.next())
                    {
                        String name=rs2.getString("name");
                        userType.addItem(name);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
    }
    private void userTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTypeActionPerformed
        // TODO add your handling code here:
        String strusertype=user.getText();
        String uname=userType.getSelectedItem().toString();
        String type="";
        Connection con=null;
        PreparedStatement pst=null;
        PreparedStatement pst1=null;
        PreparedStatement pst3=null;
        ResultSet rs=null;
        ResultSet rs1=null;
        try
        {
            String url="jdbc:mysql://localhost:3306/SmartCity";
            String usern="root";
            String pwd="";
            con=DriverManager.getConnection(url,usern,pwd);
                if(con!=null)
                {
                    String query="select * from details where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1,uname);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        type=rs.getString("infra_type");
                        if(type.equalsIgnoreCase("school"))
                        {
                            String query1="select * from school where school_name=?";
                            pst1=con.prepareStatement(query1);
                            pst1.setString(1,uname);
                            rs1=pst1.executeQuery();
                            if(rs1.next())
                            {
                                deletetxt.setText("School Name");
                                deletetxt.setVisible(true);
                                deletetxt1.setText(rs1.getString("school_name"));
                                deletetxt1.setVisible(true);
                                deletetxt2.setText("School Code");
                                deletetxt2.setVisible(true);
                                deletetxt3.setText(rs1.getString("school_code"));
                                deletetxt3.setVisible(true);
                                deletetxt5.setText("Area ()");
                                deletetxt5.setVisible(true);
                                inputArea.setText(rs1.getString("area"));
                                inputArea.setVisible(true);
                                deletetxt6.setText("Address");
                                deletetxt6.setVisible(true);
                                deletetxt7.setText(rs1.getString("address"));
                                deletetxt7.setVisible(true);
                                deletetxt8.setText("District");
                                deletetxt8.setVisible(true);
                                deletetxt9.setText(rs1.getString("district"));
                                deletetxt9.setVisible(true);
                                deletetxt10.setText("State");
                                deletetxt10.setVisible(true);
                                deletetxt11.setText(rs1.getString("state"));
                                deletetxt11.setVisible(true);
                            }
                        }
                        if(type.equalsIgnoreCase("hospital"))
                        {
                            String query1="select * from hospital where hospital_name=?";
                            pst1=con.prepareStatement(query1);
                            pst1.setString(1,uname);
                            rs1=pst1.executeQuery();
                            if(rs1.next())
                            {
                                deletetxt.setText("Hospital Name");
                                deletetxt.setVisible(true);
                                deletetxt1.setText(rs1.getString("hospital_name"));
                                deletetxt1.setVisible(true);
                                deletetxt2.setText("Area");
                                deletetxt2.setVisible(true);
                                inputArea.setText(rs1.getString("area"));
                                inputArea.setVisible(true);
                                deletetxt5.setText("Budget");
                                deletetxt5.setVisible(true);
                                inputArea1.setText(rs1.getString("Budget"));
                                inputArea1.setVisible(true);
                                deletetxt6.setText("District");
                                deletetxt6.setVisible(true);
                                deletetxt7.setText(rs1.getString("district"));
                                deletetxt7.setVisible(true);
                                deletetxt8.setText("State");
                                deletetxt8.setVisible(true);
                                deletetxt9.setText(rs1.getString("state"));
                                deletetxt9.setVisible(true);
                                deletetxt10.setText("Pin Code");
                                deletetxt10.setVisible(true);
                                deletetxt11.setText(rs1.getString("pin_code"));
                                deletetxt11.setVisible(true);
                            }
                        }
                        if(type.equalsIgnoreCase("roads"))
                        {
                            String query1="select * from roads where location=?";
                            pst1=con.prepareStatement(query1);
                            pst1.setString(1,uname);
                            rs1=pst1.executeQuery();
                            if(rs1.next())
                            {
                                deletetxt.setText("Location");
                                deletetxt.setVisible(true);
                                deletetxt1.setText(rs1.getString("location"));
                                deletetxt1.setVisible(true);
                                deletetxt2.setText("Area");
                                deletetxt2.setVisible(true);
                                inputArea.setText(rs1.getString("area"));
                                inputArea.setVisible(true);
                                deletetxt5.setText("Budget");
                                deletetxt5.setVisible(true);
                                inputArea1.setText(rs1.getString("Budget"));
                                inputArea1.setVisible(true);
                                deletetxt6.setText("District");
                                deletetxt6.setVisible(true);
                                deletetxt7.setText(rs1.getString("district"));
                                deletetxt7.setVisible(true);
                                deletetxt8.setText("State");
                                deletetxt8.setVisible(true);
                                deletetxt9.setText(rs1.getString("state"));
                                deletetxt9.setVisible(true);
                                deletetxt10.setText("Pin Code");
                                deletetxt10.setVisible(true);
                                deletetxt11.setText(rs1.getString("pin_code"));
                                deletetxt11.setVisible(true);
                            }
                        }
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_userTypeActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String strusertype=user.getText();
        String uname=userType.getSelectedItem().toString();
        String btn=deleteButton.getText();
        String type="";
        Connection con=null;
            PreparedStatement pst=null;
            PreparedStatement pst1=null;
            PreparedStatement pst3=null;
            ResultSet rs=null;
            ResultSet rs1=null;
        if(btn.equalsIgnoreCase("get details"))
        {
            try
            {
                String url="jdbc:mysql://localhost:3306/SmartCity";
                String usern="root";
                String pwd="";
                con=DriverManager.getConnection(url,usern,pwd);
                if(con!=null)
                {
                    String query="select * from details where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1,uname);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        type=rs.getString("infra_type");
                        if(type.equalsIgnoreCase("school"))
                        {
                            if(strusertype.equalsIgnoreCase("contractor"))
                            {
                                String sarea=inputArea.getText();
                                String query1="update school set area=?,principal_approval=?,mla_approval=? where school_name=?";
                                pst=con.prepareStatement(query1);
                                pst.setString(1,sarea);
                                pst.setString(2,"pending");
                                pst.setString(3,"pending");
                                pst.setString(4, uname);
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                                String usrname=Name.getText();
                                String usrtype=user.getText();
                                User usr=new User();
                                usr.setUser(usrname);
                                usr.setUserType(usrtype);
                                usr.fillPanel(usrtype);
                                usr.setVisible(true);
                                dispose();
                            }
                        }
                        if(type.equalsIgnoreCase("hospital"))
                        {
                            if(strusertype.equalsIgnoreCase("contractor"))
                            {
                                String sarea=inputArea.getText();
                                String sbudget=inputArea1.getText();
                                String query1="update hospital set area=?,budget=?,cm_approval=?,mla_approval=? where hospital_name=?";
                                pst=con.prepareStatement(query1);
                                pst.setString(1,sarea);
                                pst.setString(2,sbudget);
                                pst.setString(3,"pending");
                                pst.setString(4,"pending");
                                pst.setString(5, uname);
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                                String usrname=Name.getText();
                                String usrtype=user.getText();
                                User usr=new User();
                                usr.setUser(usrname);
                                usr.setUserType(usrtype);
                                usr.fillPanel(usrtype);
                                usr.setVisible(true);
                                dispose();
                            }
                            if(strusertype.equalsIgnoreCase("mla"))
                            {
                                String sarea=inputArea.getText();
                                String sbudget=inputArea1.getText();
                                String query1="update hospital set area=?,budget=?,mla_approval=? where hospital_name=?";
                                pst=con.prepareStatement(query1);
                                pst.setString(1,sarea);
                                pst.setString(2,sbudget);
                                pst.setString(3,"pending");
                                pst.setString(4, uname);
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                                String usrname=Name.getText();
                                String usrtype=user.getText();
                                User usr=new User();
                                usr.setUser(usrname);
                                usr.setUserType(usrtype);
                                usr.fillPanel(usrtype);
                                usr.setVisible(true);
                                dispose();
                            }
                        }
                        if(type.equalsIgnoreCase("roads"))
                        {
                            if(strusertype.equalsIgnoreCase("contractor"))
                            {
                                String sarea=inputArea.getText();
                                String sbudget=inputArea1.getText();
                                String query1="update roads set area=?,budget=?,cm_approval=?,mla_approval=? where location=?";
                                pst=con.prepareStatement(query1);
                                pst.setString(1,sarea);
                                pst.setString(2,sbudget);
                                pst.setString(3,"pending");
                                pst.setString(4,"pending");
                                pst.setString(5, uname);
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                                String usrname=Name.getText();
                                String usrtype=user.getText();
                                User usr=new User();
                                usr.setUser(usrname);
                                usr.setUserType(usrtype);
                                usr.fillPanel(usrtype);
                                usr.setVisible(true);
                                dispose();
                            }
                            if(strusertype.equalsIgnoreCase("mla"))
                            {
                                String sarea=inputArea.getText();
                                String sbudget=inputArea1.getText();
                                String query1="update roads set area=?,budget=?,mla_approval=? where location=?";
                                pst=con.prepareStatement(query1);
                                pst.setString(1,sarea);
                                pst.setString(2,sbudget);
                                pst.setString(3,"pending");
                                pst.setString(4, uname);
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                                String usrname=Name.getText();
                                String usrtype=user.getText();
                                User usr=new User();
                                usr.setUser(usrname);
                                usr.setUserType(usrtype);
                                usr.fillPanel(usrtype);
                                usr.setVisible(true);
                                dispose();
                            }
                        }
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            deleteButton.setText("Update Details");
        }
        else
        {
            try
            {
                String url="jdbc:mysql://localhost:3306/SmartCity";
                String usern="root";
                String pwd="";
                con=DriverManager.getConnection(url,usern,pwd);
                String sarea=inputArea.getText();
                if(con!=null)
                {
                    String query="select * from details where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1,uname);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String query1="update school set area=?,principal_approval=?,mla_approval=? where school_name=?";
                        pst=con.prepareStatement(query1);
                        pst.setString(1,sarea);
//                        pst.setString(2, uname);
                        pst.setString(2,"pending");
                        pst.setString(3,"pending");
                        pst.setString(4, uname);
                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Updated Successfully!");
                        String usrname=Name.getText();
                        String usrtype=user.getText();
                        User usr=new User();
                        usr.setUser(usrname);
                        usr.setUserType(usrtype);
                        usr.setVisible(true);
                        dispose();
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        String user1=Name.getText();
        String strusertype=user.getText();
        User usr=new User();
        usr.setUser(user1);
        usr.setUserType(strusertype);
        usr.fillPanel(strusertype);
        usr.setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void inputAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAreaActionPerformed

    private void inputArea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputArea1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputArea1ActionPerformed

    public void setUser(String user) 
    {
        this.Name.setText(user);
    }
    public void setUserType(String type)
    {
        this.user.setText(type);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel deletetxt;
    private javax.swing.JLabel deletetxt1;
    private javax.swing.JLabel deletetxt10;
    private javax.swing.JLabel deletetxt11;
    private javax.swing.JLabel deletetxt2;
    private javax.swing.JLabel deletetxt3;
    private javax.swing.JLabel deletetxt5;
    private javax.swing.JLabel deletetxt6;
    private javax.swing.JLabel deletetxt7;
    private javax.swing.JLabel deletetxt8;
    private javax.swing.JLabel deletetxt9;
    private javax.swing.JLabel img;
    private javax.swing.JTextField inputArea;
    private javax.swing.JTextField inputArea1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel user;
    private javax.swing.JLabel userDesignation;
    private javax.swing.JComboBox<String> userType;
    // End of variables declaration//GEN-END:variables
}
