/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication.smartcity;

import java.sql.*;
import javax.swing.JFrame;

/**
 *
 * @author vivek
 */
public class User extends javax.swing.JFrame {

    /**
     * Creates new form User
     */
    public User() {
        initComponents();
        setSize(1000,600);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        updateDetails = new javax.swing.JButton();
        resetPassword = new javax.swing.JButton();
        addDetails = new javax.swing.JButton();
        Approval = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txt = new javax.swing.JLabel();
        txt1 = new javax.swing.JLabel();
        userType = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        updateDetails1 = new javax.swing.JButton();
        resetPassword1 = new javax.swing.JButton();
        Approval1 = new javax.swing.JButton();
        logOut1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        updateDetails.setBackground(new java.awt.Color(153, 153, 153));
        updateDetails.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        updateDetails.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-add-properties-100.png")); // NOI18N
        updateDetails.setText("Update Details");
        updateDetails.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateDetails.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDetailsActionPerformed(evt);
            }
        });

        resetPassword.setBackground(new java.awt.Color(153, 153, 153));
        resetPassword.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        resetPassword.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-password-reset-40.png")); // NOI18N
        resetPassword.setText("Reset Password");
        resetPassword.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resetPassword.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        resetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPasswordActionPerformed(evt);
            }
        });

        addDetails.setBackground(new java.awt.Color(153, 153, 153));
        addDetails.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        addDetails.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-add-properties-100.png")); // NOI18N
        addDetails.setText("Add Details");
        addDetails.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addDetails.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDetailsActionPerformed(evt);
            }
        });

        Approval.setBackground(new java.awt.Color(153, 153, 153));
        Approval.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        Approval.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-test-passed-100.png")); // NOI18N
        Approval.setText("Approvals");
        Approval.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Approval.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Approval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApprovalActionPerformed(evt);
            }
        });

        logOut.setBackground(new java.awt.Color(153, 153, 153));
        logOut.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        logOut.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/sign out.png")); // NOI18N
        logOut.setText("Log Out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetPassword)
                        .addGap(97, 97, 97))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(updateDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(Approval, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(updateDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Approval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(91, 91, 91)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOut))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        txt.setBackground(new java.awt.Color(204, 204, 255));
        txt.setFont(new java.awt.Font("Bell MT", 1, 50)); // NOI18N
        txt.setText("Welcome ");

        txt1.setBackground(new java.awt.Color(204, 204, 255));
        txt1.setFont(new java.awt.Font("Bell MT", 1, 50)); // NOI18N

        userType.setText("jLabel1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txt)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userType)
                        .addGap(100, 100, 100))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt)
                            .addComponent(txt1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(userType)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        userType.setVisible(false);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        updateDetails1.setBackground(new java.awt.Color(153, 153, 153));
        updateDetails1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        updateDetails1.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-add-properties-100.png")); // NOI18N
        updateDetails1.setText("Update Details");
        updateDetails1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateDetails1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDetails1ActionPerformed(evt);
            }
        });

        resetPassword1.setBackground(new java.awt.Color(153, 153, 153));
        resetPassword1.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        resetPassword1.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-password-reset-40.png")); // NOI18N
        resetPassword1.setText("Reset Password");
        resetPassword1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resetPassword1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        resetPassword1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPassword1ActionPerformed(evt);
            }
        });

        Approval1.setBackground(new java.awt.Color(153, 153, 153));
        Approval1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        Approval1.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/icons8-test-passed-100.png")); // NOI18N
        Approval1.setText("Approvals");
        Approval1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Approval1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Approval1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Approval1ActionPerformed(evt);
            }
        });

        logOut1.setBackground(new java.awt.Color(153, 153, 153));
        logOut1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        logOut1.setIcon(new javax.swing.ImageIcon("/Users/vivek/NetBeansProjects/SmartCity/src/main/java/images/sign out.png")); // NOI18N
        logOut1.setText("Log Out");
        logOut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOut1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(logOut1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 552, Short.MAX_VALUE)
                .addComponent(resetPassword1)
                .addGap(97, 97, 97))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(updateDetails1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(Approval1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Approval1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOut1))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(114, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jPanel1.setVisible(false);
        jPanel2.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void fillPanel(String strusertype)
    {
        if(strusertype.equalsIgnoreCase("contractor"))
        {
            jPanel1.setVisible(true);
            jPanel2.setVisible(false);
        }
        else
        {
            jPanel2.setVisible(true);
            jPanel1.setVisible(false);
        }
    }
    private void updateDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDetailsActionPerformed
        // TODO add your handling code here:
        String user=txt1.getText();
        String type=userType.getText();
        UpdateDetails upd=new UpdateDetails();
        upd.setUser(user);
        upd.setUserType(type);
        upd.setVisible(true);
        dispose();
    }//GEN-LAST:event_updateDetailsActionPerformed

    private void resetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPasswordActionPerformed
        // TODO add your handling code here:
        String user=txt1.getText();
        String type=userType.getText();
        resetPassword rp=new resetPassword();
        rp.setUser(user);
        rp.setUserType(type);
        rp.setVisible(true);
        dispose();
    }//GEN-LAST:event_resetPasswordActionPerformed

    private void addDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDetailsActionPerformed
        // TODO add your handling code here:
        String name=txt1.getText();
        String usrtype=userType.getText();
        AddDetails adD=new AddDetails();
        adD.setUser(name);
        adD.setUserType(usrtype);
        adD.setVisible(true);
        dispose();
    }//GEN-LAST:event_addDetailsActionPerformed

    private void ApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApprovalActionPerformed
        // TODO add your handling code here:
        String user1=userType.getText();
        String user=txt1.getText();
        Connection con=null;
                PreparedStatement pst=null;
                PreparedStatement pst1=null;
                ResultSet rs=null;
                ResultSet rs1=null;
                String cName="root";
                String cPassword="";
                String url="jdbc:mysql://localhost:3306/SmartCity";
        if(user1.equalsIgnoreCase("principal"))
        {
            Principal_Approval ap=new Principal_Approval();
            ap.setUser(user);
            ap.setUserType(user1);
            try
            {
                con=DriverManager.getConnection(url,cName,cPassword);
                if(con!=null)
                {
                    String query="select * from principal where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1, user);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String sName=rs.getString("school");
                        ap.fillPanel(sName);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            ap.setVisible(true);
            dispose();
        }
        if(user1.equalsIgnoreCase("mla"))
        {
            Approval ap=new Approval();
            ap.setUser(user);
            ap.setUserType(user1);
            try
            {
                con=DriverManager.getConnection(url,cName,cPassword);
                if(con!=null)
                {
                    String query="select * from mla where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1, user);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String District=rs.getString("district");
                        ap.fillComboBox(District);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            ap.setVisible(true);
            dispose();
        }
//        else
//        {
//            Approval ap=new Approval();
//            ap.setUser(user);
//            ap.setUserType(user1);
//            ap.setVisible(true);
//            dispose();
//        }
        
//        if(user1.equalsIgnoreCase("contractor"))
//        {
//            System.out.print("2");
//            Approval ap=new Approval();
//            ap.setUserType("Contractor");
//            ap.setVisible(true);
//            dispose();
//        }
//        if(user1.equalsIgnoreCase("mla"))
//        {
//            System.out.print("3");
//            Approval ap=new Approval();
//            ap.setUserType("MLA");
//            ap.setVisible(true);
//            dispose();
//        }
//        if(user1.equalsIgnoreCase("cm"))
//        {
//            System.out.print("4");
//            Approval ap=new Approval();
//            ap.setUserType("CM");
//            ap.setVisible(true);
//            dispose();
//        }
        
        
    }//GEN-LAST:event_ApprovalActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        // TODO add your handling code here:
        Login admin= new Login();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutActionPerformed

    private void updateDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDetails1ActionPerformed
        // TODO add your handling code here:
        String user1=userType.getText();
        String user=txt1.getText();
        Connection con=null;
                PreparedStatement pst=null;
                PreparedStatement pst1=null;
                ResultSet rs=null;
                ResultSet rs1=null;
                String cName="root";
                String cPassword="";
                String url="jdbc:mysql://localhost:3306/SmartCity";
        if(user1.equalsIgnoreCase("principal"))
        {
            Principal_UpdateDetails ap=new Principal_UpdateDetails();
            ap.setUser(user);
            ap.setUserType(user1);
            try
            {
                con=DriverManager.getConnection(url,cName,cPassword);
                if(con!=null)
                {
                    String query="select * from principal where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1, user);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String sName=rs.getString("school");
                        ap.fillPanel(sName);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            ap.setVisible(true);
            dispose();
        }
        if(user1.equalsIgnoreCase("mla"))
        {
            UpdateDetails ap=new UpdateDetails();
            ap.setUser(user);
            ap.setUserType(user1);
            try
            {
                con=DriverManager.getConnection(url,cName,cPassword);
                if(con!=null)
                {
                    String query="select * from mla where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1, user);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String District=rs.getString("district");
                        ap.fillComboBox(District);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            ap.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_updateDetails1ActionPerformed

    private void resetPassword1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPassword1ActionPerformed
        // TODO add your handling code here:
        String user=txt1.getText();
        String type=userType.getText();
        resetPassword rp=new resetPassword();
        rp.setUser(user);
        rp.setUserType(type);
        rp.setVisible(true);
        dispose();
    }//GEN-LAST:event_resetPassword1ActionPerformed

    private void Approval1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Approval1ActionPerformed
        // TODO add your handling code here:
        String user1=userType.getText();
        String user=txt1.getText();
        Connection con=null;
                PreparedStatement pst=null;
                PreparedStatement pst1=null;
                ResultSet rs=null;
                ResultSet rs1=null;
                String cName="root";
                String cPassword="";
                String url="jdbc:mysql://localhost:3306/SmartCity";
        if(user1.equalsIgnoreCase("principal"))
        {
            Principal_Approval ap=new Principal_Approval();
            ap.setUser(user);
            ap.setUserType(user1);
            try
            {
                con=DriverManager.getConnection(url,cName,cPassword);
                if(con!=null)
                {
                    String query="select * from principal where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1, user);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String sName=rs.getString("school");
                        ap.fillPanel(sName);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            ap.setVisible(true);
            dispose();
        }
        if(user1.equalsIgnoreCase("mla"))
        {
            Approval ap=new Approval();
            ap.setUser(user);
            ap.setUserType(user1);
            try
            {
                con=DriverManager.getConnection(url,cName,cPassword);
                if(con!=null)
                {
                    String query="select * from mla where name=?";
                    pst=con.prepareStatement(query);
                    pst.setString(1, user);
                    rs=pst.executeQuery();
                    if(rs.next())
                    {
                        String District=rs.getString("district");
                        ap.fillComboBox(District);
                    }
                }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
            ap.setVisible(true);
            dispose();
        }
        if(user1.equalsIgnoreCase("cm"))
        {
            Approval ap=new Approval();
            ap.setUser(user);
            ap.setUserType(user1);
            ap.fillComboBox1();
            ap.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_Approval1ActionPerformed

    private void logOut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOut1ActionPerformed
        // TODO add your handling code here:
        Login admin= new Login();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOut1ActionPerformed

    public void setUser(String user) 
    {
        this.txt1.setText(user);
    }
    public void setUserType(String type)
    {
        this.userType.setText(type);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approval;
    private javax.swing.JButton Approval1;
    private javax.swing.JButton addDetails;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton logOut;
    private javax.swing.JButton logOut1;
    private javax.swing.JButton resetPassword;
    private javax.swing.JButton resetPassword1;
    private javax.swing.JLabel txt;
    private javax.swing.JLabel txt1;
    private javax.swing.JButton updateDetails;
    private javax.swing.JButton updateDetails1;
    private javax.swing.JLabel userType;
    // End of variables declaration//GEN-END:variables
}
